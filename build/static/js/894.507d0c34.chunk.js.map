{"version":3,"file":"static/js/894.507d0c34.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Product/PostEditProduct.jsx"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log('delete image',ids)\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Input, message, Row, Upload} from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport {useMutation, useQuery} from 'react-query';\nimport apiService from '../../../@crema/services/apis/api';\nimport {AppLoader} from '../../../@crema';\nimport {useNavigate} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {EDIT_DATA} from '../../../shared/constants/ActionTypes';\n\nconst initialValueForm = {\n  textRu:\"\",\n  textUz:\"\",\n  model:\"\",\n  mediaLogoId:\"\",\n  mediaBannerId:\"\"\n};\n\n\n\nconst PostEditProduct = () => {\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const {editId} = useSelector((state) => state.editData);\n  const dispatch = useDispatch();\n\n  const [fileListProps, setFileListProps] = useState([]);\n  const [fileListProps2, setFileListProps2] = useState([]);\n  const [valuesForm, setValues] = useState({});\n  const [isNotEditImages, setIsNotEditImages] = useState(false);\n  const [deleteImage, setDeleteImage] = useState({});\n  const [deleteImage2, setDeleteImage2] = useState({});\n  // query-banner\n  const {\n    mutate: postBannerMutate,\n    data: postBanner,\n    isLoading: postBannerLoading,\n    isSuccess: postBannerSuccess,\n    error: postBannerError,\n    isError: postBannerIsError,\n  } = useMutation(({url, data}) => apiService.postData(url, data),\n      {\n        onSuccess: () => message.success('Success'),\n        onError: (error) => message.error(error.message)\n      });\n  // query-image\n  const {\n    mutate: imagesUploadMutate,\n    data: imagesUpload,\n    isLoading: imagesUploadLoading,\n    isSuccess: imagesUploadSuccess,\n  } = useMutation(({url, formData}) => apiService.postData(url, formData),{\n\n    onError: (error) => message.error(error.message,'Rasmning JPG,JPEG,PNG formatlariga ruxsat etilgan')\n  });\n  // query-edit\n\n  const {\n    isLoading: editBannerLoading,\n    data: editProductData,\n    refetch: editBannerRefetch,\n    isSuccess: editProductSuccess,\n  } = useQuery(\n    ['edit-banner', editId],\n    () => apiService.getDataByID('/product', editId),\n    {\n      enabled: false,\n    },\n  );\n  // put-query\n  const {\n    mutate: putBanner,\n    isLoading: putBannerLoading,\n    data: putData,\n    isSuccess: putBannerSuccess,\n    error: putBannerError,\n    isError: putBannerIsError,\n  } = useMutation(({url, data, id}) => apiService.editData(url, data, id),{\n    onError: (error) => message.error(error.message)\n  });\n  // delete-image-query\n  const {mutate: imagesDeleteMutate} = useMutation(({url, ids}) => apiService.deleteImages(url, ids),{\n    onSuccess: () => message.success('Success'),\n    onError: (error) => message.error(error.message)\n      }\n  );\n\n  // product success\n  useEffect(() => {\n    let delImage=[]\n    if (putBannerSuccess) {\n      dispatch({type: EDIT_DATA, payload: ''});\n    }\n    if (editProductSuccess && deleteImage?.uid) {\n      delImage.push(deleteImage?.uid)\n    }\n    if (editProductSuccess && deleteImage2?.uid) {\n      delImage.push(deleteImage2?.uid)\n    }\n    if (editProductSuccess && (deleteImage?.uid || deleteImage2?.uid)) {\n      const ids={\n        ids:delImage\n      }\n      imagesDeleteMutate({url: '/medias', ids});\n    }\n\n    if (postBannerSuccess || putBannerSuccess) {\n     \n      navigate('/product');\n    }\n  }, [postBanner, putData]);\n\n  // product error\n  useEffect(() => {\n    if (postBannerIsError) {\n      message.error(postBannerError.message);\n    }\n    if (putBannerIsError) {\n      message.error(putBannerError.message);\n    }\n  }, [postBannerError, putBannerError]);\n\n  // if edit product\n  useEffect(() => {\n    if (editId !== '') {\n      editBannerRefetch();\n    }\n  }, [editId]);\n\n  // if no edit product\n  useEffect(() => {\n    if (editId === '') {\n      form.setFieldsValue(initialValueForm);\n    }\n  }, []);\n\n  //edit product\n  useEffect(() => {\n    const imageInitialLogo = [\n      {\n        uid: editProductData?.imageLogo?._id,\n        name: editProductData?.imageLogo?.name,\n        status: 'done',\n        url: `${process.env.REACT_APP_API_URL}/${editProductData?.imageLogo?.path}`,\n      },\n    ];\n    const imageInitialBanner=[\n      {\n        uid: editProductData?.imageBanner?._id,\n        name: editProductData?.imageBanner?.name,\n        status: 'done',\n        url: `${process.env.REACT_APP_API_URL}/${editProductData?.imageBanner?.path}`,\n      },\n    ]\n    if (editProductSuccess) {\n      const edit = {\n        textRu: editProductData?.textRu,\n        textUz: editProductData?.textUz,\n        model: editProductData?.model,\n        mediaLogoId: imageInitialLogo,\n        mediaBannerId: imageInitialBanner,\n      };\n      setFileListProps(imageInitialLogo);\n      setFileListProps2(imageInitialBanner);\n      form.setFieldsValue(edit);\n    }\n  }, [editProductData]);\n\n  // post product\n  useEffect(() => {\n    let imageLogo=\"\"\n    let imageBanner=\"\"\n    if (editProductSuccess && imagesUploadSuccess && fileListProps[0]?.originFileObj?.uid) {\n      imageLogo = imagesUpload[0]?._id;\n    } else if (editProductSuccess) {\n      imageLogo = fileListProps[0]?.uid;\n    }\n    if (editProductSuccess && imagesUploadSuccess && fileListProps2[0]?.originFileObj?.uid) {\n      imageBanner = imagesUpload.length===2 ? imagesUpload[1]?._id : imagesUpload[0]?._id;\n    } else if (editProductSuccess) {\n      imageBanner = fileListProps2[0]?.uid;\n    }\n    if (!editProductSuccess && imagesUpload){\n      imageLogo=imagesUpload[0]?._id\n      imageBanner=imagesUpload[1]?._id\n    }\n    const data = {\n      textRu: valuesForm.textRu,\n      textUz: valuesForm.textUz,\n      model:valuesForm.model,\n      mediaLogoId: imageLogo,\n      mediaBannerId:imageBanner\n    };\n\n    if (imagesUploadSuccess && !editProductSuccess) {\n      postBannerMutate({url: '/product', data});\n    } else if (isNotEditImages || imagesUploadSuccess) {\n      putBanner({url: '/product', data, id: editId});\n    }\n  }, [imagesUpload, valuesForm]);\n\n  const onFinish = (values) => {\n    const formData = new FormData();\n\n    let uploadNewImage = false;\n\n    if (editProductSuccess) {\n      if (fileListProps[0]?.originFileObj?.uid && fileListProps2[0]?.originFileObj?.uid) {\n        uploadNewImage = true;\n        formData.append('media', fileListProps[0]?.originFileObj);\n        formData.append('media', fileListProps2[0]?.originFileObj);\n\n        setIsNotEditImages(false);\n        // setFileList(fileListProps);\n      }else if (fileListProps[0]?.originFileObj?.uid) {\n        uploadNewImage = true;\n        formData.append('media', fileListProps[0]?.originFileObj);\n\n        setIsNotEditImages(false);\n        // setFileList(fileListProps);\n      } else if (fileListProps2[0]?.originFileObj?.uid) {\n        uploadNewImage = true;\n        formData.append('media', fileListProps2[0]?.originFileObj);\n\n        setIsNotEditImages(false);\n        // setFileList(fileListProps);\n      }else {\n        uploadNewImage = false;\n        // setFileList(fileListProps);\n        setIsNotEditImages(true);\n      }\n    } else {\n      uploadNewImage = true;\n      formData.append('media', fileListProps[0]?.originFileObj);\n      formData.append('media', fileListProps2[0]?.originFileObj);\n    }\n    if (uploadNewImage && !imagesUploadSuccess) {\n      imagesUploadMutate({url: '/medias', formData});\n    }\n\n    setValues(values);\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const onChangeLogo = ({fileList: newFileList}) => {\n    setFileListProps(newFileList);\n    form.setFieldsValue({mediaLogoId: newFileList});\n  };\n\n  const onChangeBanner = ({fileList: newFileList}) => {\n    setFileListProps2(newFileList);\n    form.setFieldsValue({mediaBannerId: newFileList});\n  };\n\n  const handleRemoveImageLogo = (file) => {\n    if (editProductSuccess) {\n      setDeleteImage(file);\n    }\n  };\n  const handleRemoveImageBanner = (file) => {\n    if (editProductSuccess) {\n      setDeleteImage2(file);\n    }\n  };\n\n  // refresh page again get data\n\n  useEffect(() => {\n    const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n    if (storedValues) {\n      storedValues.images = [];\n      form.setFieldsValue(storedValues);\n    }\n\n    const handleBeforeUnload = () => {\n      localStorage.setItem(\n        'myFormValues',\n        JSON.stringify(form.getFieldsValue()),\n      );\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n        localStorage.removeItem('editDataId');\n        localStorage.removeItem('myFormValues');\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n\n  const onPreview = async (file) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow?.document.write(image.outerHTML);\n  };\n\n  return (\n    <div>\n      {imagesUploadLoading ||\n      postBannerLoading ||\n      editBannerLoading ||\n      putBannerLoading ? (\n        <AppLoader />\n      ) : (\n        <Form\n          form={form}\n          name='basic'\n          labelCol={{\n            span: 24,\n          }}\n          wrapperCol={{\n            span: 24,\n          }}\n          style={{\n            maxWidth: '100%',\n          }}\n          initialValues={initialValueForm}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete='off'>\n          <Row gutter={20}>\n            <Col span={12}>\n              <Form.Item\n                label='Текст Ru'\n                name='textRu'\n                rules={[\n                  {\n                    required: true,\n                    message: 'Требуется текст RU!',\n                  },\n                ]}>\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label='Text Uz'\n                name='textUz'\n                rules={[\n                  {\n                    required: true,\n                    message: 'Text kiritish talab qilinadi Uz!',\n                  },\n                ]}>\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={20}>\n            <Col span={24}>\n              <Form.Item\n                label='Model'\n                name='model'\n                rules={[\n                  {\n                    required: true,\n                    message: 'Требуется ввод модели',\n                  },\n                ]}>\n                <Input />\n              </Form.Item>\n            </Col>\n\n          </Row>\n          <Row gutter={20}>\n            <Col span={12}>\n              <Form.Item\n                  label='Изображение логотипа'\n                  name={'mediaLogoId'}\n                  rules={[{required: true, message: 'Требуется загрузка изображения логотипа'}]}>\n                <ImgCrop>\n                  <Upload\n                      maxCount={1}\n                      fileList={fileListProps}\n                      listType='picture-card'\n                      onChange={onChangeLogo}\n                      onPreview={onPreview}\n                      beforeUpload={() => false}\n                      onRemove={handleRemoveImageLogo}>\n                    {fileListProps.length>0 ? \"\" : \"Upload\"}\n                  </Upload>\n                </ImgCrop>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                  label='Изображение баннера'\n                  name={'mediaBannerId'}\n                  rules={[{required: true, message: 'Требуется загрузка изображения баннера'}]}>\n                <ImgCrop rotate>\n                  <Upload\n                      maxCount={1}\n                      fileList={fileListProps2}\n                      listType='picture-card'\n                      onChange={onChangeBanner}\n                      onPreview={onPreview}\n                      beforeUpload={() => false}\n                      onRemove={handleRemoveImageBanner}>\n                    {fileListProps2.length>0 ? \"\" : \"Upload\"}\n                  </Upload>\n                </ImgCrop>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Button type='primary' htmlType='submit' style={{width: '100%'}}>\n            {editProductSuccess ? 'Edit' : 'Add'}\n          </Button>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default PostEditProduct;\n"],"names":["axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","initialValueForm","textRu","textUz","model","mediaLogoId","mediaBannerId","PostEditProduct","form","Form","useForm","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","fileListProps","setFileListProps","useState","fileListProps2","setFileListProps2","valuesForm","setValues","isNotEditImages","setIsNotEditImages","deleteImage","setDeleteImage","deleteImage2","setDeleteImage2","mutate","postBannerMutate","postBanner","isLoading","postBannerLoading","isSuccess","postBannerSuccess","postBannerError","isError","postBannerIsError","useMutation","_ref","apiService","onSuccess","message","success","onError","imagesUploadMutate","imagesUpload","imagesUploadLoading","imagesUploadSuccess","_ref2","editBannerLoading","editProductData","refetch","editBannerRefetch","editProductSuccess","useQuery","enabled","putBanner","putBannerLoading","putData","putBannerSuccess","putBannerError","putBannerIsError","_ref3","imagesDeleteMutate","_ref4","useEffect","delImage","type","EDIT_DATA","payload","uid","push","setFieldsValue","_editProductData$imag","_editProductData$imag2","_editProductData$imag3","_editProductData$imag4","_editProductData$imag5","_editProductData$imag6","imageInitialLogo","imageLogo","_id","name","status","path","imageInitialBanner","imageBanner","edit","_fileListProps$","_fileListProps$$origi","_fileListProps2$","_fileListProps2$$orig","_imagesUpload$","_imagesUpload$2","_imagesUpload$3","_imagesUpload$4","_imagesUpload$5","originFileObj","_fileListProps$2","length","_fileListProps2$2","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","image","Image","imgWindow","open","document","write","outerHTML","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","FormData","uploadNewImage","_fileListProps$3","_fileListProps$3$orig","_fileListProps2$3","_fileListProps2$3$ori","_fileListProps$5","_fileListProps$5$orig","_fileListProps2$5","_fileListProps2$5$ori","_fileListProps$4","_fileListProps2$4","_fileListProps$7","_fileListProps2$7","append","_fileListProps$6","_fileListProps2$6","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","Item","label","rules","required","Input","ImgCrop","Upload","maxCount","fileList","listType","onChange","_ref5","newFileList","beforeUpload","onRemove","rotate","_ref6","Button","htmlType","width"],"sourceRoot":""}