{"version":3,"file":"static/js/902.76c84399.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Contact/ContactTable.jsx","pages/sample/Contact/index.jsx"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log('delete image',ids)\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import { Button,   Space, Table } from \"antd\";\nimport {  EditOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport {useDispatch} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {useNavigate} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst ContactTable = ({data}) => {\n    const dispatch=useDispatch()\n    const navigate =useNavigate()\n\n    const [reverseData,setReverseData]=useState([])\n\n    const Edit = (id) => {\n        localStorage.setItem('editDataId',id)\n        dispatch({type:EDIT_DATA,payload:id})\n        navigate('/contact/add')\n    };\n\n    useEffect(() => {\n        const reverse = []\n        if (data){\n        reverse.push(data)\n        }\n        setReverseData(reverse)\n    }, [data])\n\n    const columns = [\n        {\n            title: 'Tel',\n            dataIndex: 'tel',\n            id: 'tel',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Facebook',\n            dataIndex: 'facebook',\n            id: 'facebook',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Telegram',\n            dataIndex: 'twitter',\n            id: 'twitter',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Instagram',\n            dataIndex: 'instagram',\n            id: 'instagram',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Action',\n            id: 'action',\n            render: (_, record) => (\n                <Space size={20}>\n                    <Button\n                        onClick={() => Edit(record?._id)}\n                        type='primary'\n                        icon={<EditOutlined />}>\n                        Edit\n                    </Button>\n\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Table\n                columns={columns}\n                dataSource={reverseData}\n                rowKey={(record) => record?._id}\n            />\n        </div>\n    );\n};\n\nContactTable.propTypes={\n    data:PropTypes.object,\n}\n\nexport default ContactTable;","import React, { useState} from 'react';\nimport ContactTable from './ContactTable';\nimport {Button, Col, Input, message, Row, Space, Spin} from 'antd';\nimport {PlusOutlined} from '@ant-design/icons';\nimport {useNavigate} from 'react-router-dom';\nimport apiService from '../../../@crema/services/apis/api';\nimport { useQuery} from 'react-query';\nimport {EDIT_DATA} from '../../../shared/constants/ActionTypes';\nimport {useDispatch} from 'react-redux';\n\nconst Index = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const {\n    data,\n    isLoading: getCategoryLoading,\n  } = useQuery('contact-get', () => apiService.getData('/contact'), {\n    // enabled:false,\n    onError: (error) => {\n      message.error(error);\n      // Handle the error\n    },\n  });\n  const [search, setSearch] = useState([]);\n  const [isSearch, setIsSearch] = useState(false);\n\n\n\n  const addArticle = () => {\n    dispatch({type: EDIT_DATA, payload: ''});\n    navigate('/contact/add');\n  };\n  const serachProduct = (value) => {\n    if (value === '') {\n      setIsSearch(false);\n    } else {\n      setIsSearch(true);\n    }\n\n    const filterData = data?.filter(\n      (data) =>\n        data.nameRu.toLowerCase().includes(value.toLowerCase()) ||\n        data.nameUz.toLowerCase().includes(value.toLowerCase()),\n    );\n    setSearch(filterData);\n  };\n\n  return (\n    <div className={'site-space-compact-wrapper'}>\n      <Space direction={'vertical'} style={{width: '100%'}}>\n        <Row gutter={20}>\n          <Col span={16}>\n            <Input onChange={(e) => serachProduct(e.target.value)} />\n          </Col>\n          <Col span={8}>\n            <Button\n              type='primary'\n              icon={<PlusOutlined />}\n              style={{width: '100%'}}\n              disabled={true}\n              onClick={addArticle}>\n              Add\n            </Button>\n          </Col>\n        </Row>\n        <Spin\n          size='medium'\n          spinning={getCategoryLoading }>\n          <ContactTable\n            data={isSearch ? search : data}\n          />\n        </Spin>\n      </Space>\n    </div>\n  );\n};\n\nexport default Index;\n"],"names":["axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","_ref","dispatch","useDispatch","navigate","useNavigate","reverseData","setReverseData","useState","useEffect","reverse","push","columns","title","dataIndex","render","text","_jsx","children","_","record","Space","size","Button","onClick","Edit","_id","setItem","type","EDIT_DATA","payload","icon","EditOutlined","Table","dataSource","rowKey","Index","isLoading","getCategoryLoading","useQuery","apiService","onError","message","search","setSearch","isSearch","setIsSearch","className","_jsxs","direction","style","width","Row","gutter","Col","span","Input","onChange","e","value","filterData","filter","nameRu","toLowerCase","includes","nameUz","serachProduct","target","PlusOutlined","disabled","addArticle","Spin","spinning","ContactTable"],"sourceRoot":""}