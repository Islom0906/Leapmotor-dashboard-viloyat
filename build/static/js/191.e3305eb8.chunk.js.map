{"version":3,"file":"static/js/191.e3305eb8.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/About/AboutTable.jsx","pages/sample/About/index.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log('delete image',ids)\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import { Button,   Space, Table,Image } from \"antd\";\nimport {  EditOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport {useDispatch} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {useNavigate} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nconst AboutTable = ({data}) => {\n    const dispatch=useDispatch()\n    const navigate =useNavigate()\n\n\n    const [reverseData,setReverseData]=useState([])\n    const Edit = (id) => {\n        localStorage.setItem('editDataId',id)\n        dispatch({type:EDIT_DATA,payload:id})\n        navigate('/about/add')\n    };\n\n    useEffect(()=>{\n        const reverse=data?.reverse()\n        setReverseData(reverse)\n    },[data])\n\n\n    const columns = [\n        {\n            title: 'Text Ru',\n            dataIndex: 'mainSection',\n            id: 'mainSection',\n            render: (text) => <p>{text.textRu}</p>,\n        },\n        {\n            title: 'Text Uz',\n            dataIndex: 'mainSection',\n            id: 'mainSection',\n            render: (text) => <p>{text.textUz}</p>,\n        },\n        {\n            title: 'Image',\n            dataIndex: 'mainSection',\n            id: 'mainSection',\n            render: (image) => {\n                console.log(image)\n                return (\n                    <Image\n                        width={50}\n\n                        src={`${process.env.REACT_APP_API_URL}/${image?.imageMain?.path}`}\n                    />\n                )},\n        },\n        {\n            title: 'Action',\n            id: 'action',\n            render: (_, record) => (\n                <Space size={20}>\n                    <Button\n                        onClick={() => Edit(record._id)}\n                        type='primary'\n                        icon={<EditOutlined />}>\n                        Edit\n                    </Button>\n\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Table\n                columns={columns}\n                dataSource={reverseData}\n                rowKey={(record) => record._id}\n            />\n        </div>\n    );\n};\n\nAboutTable.propTypes={\n    data:PropTypes.array,\n}\n\nexport default AboutTable;","import React, { useState} from 'react';\nimport AboutTable from \"./AboutTable\";\nimport {Button, Col, Input, message, Row, Space, Spin} from \"antd\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport {useNavigate} from \"react-router-dom\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport { useQuery} from \"react-query\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst Index = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const {data, isLoading: getCategoryLoading} = useQuery('about-get', () =>\n            apiService.getData('/about'), {\n            // enabled:false,\n            onError: (error) => {\n\n                message.error(error.message);\n                // Handle the error\n            },\n        }\n    );\n    const [search,setSearch]=useState([])\n    const [isSearch,setIsSearch]=useState(false)\n\n\n\n\n    const addArticle = () => {\n        dispatch({type: EDIT_DATA, payload: \"\"})\n        navigate('/about/add')\n    }\n    const serachProduct=(value)=>{\n        if (value===\"\"){\n            setIsSearch(false)\n        }\n        else{\n            setIsSearch(true)\n        }\n\n\n        const filterData=data?.filter(data=>data.textRu.toLowerCase().includes(value.toLowerCase()) || data.textUz.toLowerCase().includes(value.toLowerCase()))\n        setSearch(filterData)\n    }\n    return (\n        <div className={'site-space-compact-wrapper'}>\n            <Space direction={'vertical'} style={{width: '100%'}}>\n                <Row gutter={20}>\n                    <Col span={16}>\n                        <Input onChange={(e)=>serachProduct(e.target.value)}/>\n                    </Col>\n                    <Col span={8}>\n                        <Button disabled={data?.length> 0 ? true : false} type=\"primary\" icon={<PlusOutlined/>} style={{width: '100%'}} onClick={addArticle}>\n                            Add\n                        </Button>\n                    </Col>\n                </Row>\n                <Spin size='medium' spinning={getCategoryLoading}>\n                    <AboutTable data={isSearch ? search : data} />\n                </Spin>\n            </Space>\n\n\n        </div>\n    );\n};\n\nexport default Index;"],"names":["axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","_ref","dispatch","useDispatch","navigate","useNavigate","reverseData","setReverseData","useState","useEffect","reverse","columns","title","dataIndex","render","text","_jsx","children","textRu","textUz","image","_image$imageMain","Image","width","src","imageMain","path","_","record","Space","size","Button","onClick","Edit","_id","setItem","type","EDIT_DATA","payload","icon","EditOutlined","Table","dataSource","rowKey","Index","isLoading","getCategoryLoading","useQuery","apiService","onError","message","search","setSearch","isSearch","setIsSearch","className","_jsxs","direction","style","Row","gutter","Col","span","Input","onChange","e","value","filterData","filter","toLowerCase","includes","serachProduct","target","disabled","length","PlusOutlined","addArticle","Spin","spinning","AboutTable"],"sourceRoot":""}