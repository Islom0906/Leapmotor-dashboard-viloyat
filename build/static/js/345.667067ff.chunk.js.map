{"version":3,"file":"static/js/345.667067ff.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/Contact/ContactPostEdit.jsx","../node_modules/antd/es/col/index.js"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log('delete image',ids)\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect} from 'react';\nimport {Button, Col, Form, Input, message, Row} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\n\nconst initialValueForm = {\n    tel:\"\",\n    facebook:\"\",\n    twitter:\"\",\n    instagram:\"\"\n};\n\n\n\nconst ContactPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId}=useSelector(state => state.editData)\n    const dispatch=useDispatch()\n\n    // query-contact\n    const {\n        mutate: postContactMutate,\n        data: postContact,\n        isLoading: postContactLoading,\n        isSuccess: postContactSuccess,\n        error: postContactError,\n        isError: postContactIsError\n    } = useMutation(({url, data}) => apiService.postData(url, data),{\n        onSuccess:()=>{\n\n            message.success('Success')\n        },\n        onError:(error)=>{\n\n            message.error(error)\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editContactLoading,\n        data: editContactData,\n        refetch: editContactRefetch,\n        isSuccess: editContactSuccess,\n        error:putContactError,\n        isError:putContactIsError\n    } = useQuery([\"edit-contact\"], () => apiService.getData(\"/contact\"), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putContact,\n        isLoading: putContactLoading,\n        data: putData,\n        isSuccess: putContactSuccess\n    } = useMutation(({\n                         url,\n                         data,\n                         id\n                     }) => apiService.editData(url, data, id));\n    // contact success\n    useEffect(() => {\n        if (putContactSuccess) {\n            dispatch({type:EDIT_DATA,payload:\"\"})\n        }\n\n        if (postContactSuccess || putContactSuccess) {\n\n            navigate('/contact')\n        }\n    }, [postContact,putData])\n\n    // contact error\n    useEffect(() => {\n        if (postContactIsError) {\n            message.error(postContactError.message)\n        }\n        if (putContactIsError) {\n            message.error(putContactError.message)\n        }\n    }, [postContactError,putContactError])\n\n\n\n    // if edit contact\n    useEffect(() => {\n        if (editId !== \"\") {\n            editContactRefetch();\n        }\n    }, [editId]);\n\n    // if no edit contact\n    useEffect(() => {\n        if (editId===\"\"){\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n\n\n    //edit contact\n    useEffect(()=>{\n        if (editContactSuccess){\n\n        const edit={\n            tel:editContactData.tel,\n            facebook:editContactData.facebook,\n            twitter:editContactData.twitter,\n            instagram:editContactData.instagram,\n\n        }\n            form.setFieldsValue(edit)\n        }\n\n    },[editContactData])\n\n\n\n    const onFinish = (values) => {\n\n\n\n        if (editContactSuccess){\n            putContact({url: '/contact',id:editId,data:values})\n        }else{\n            postContactMutate({url: \"/contact\", data:values});\n        }\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n\n    // refresh page again get data\n\n  useEffect(() => {\n    const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n    if (storedValues) {\n        storedValues.images=[]\n      form.setFieldsValue(storedValues);\n    }\n\n    const handleBeforeUnload = () => {\n        \n            localStorage.setItem(\n              'myFormValues',\n              JSON.stringify(form.getFieldsValue()),\n            );\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return ()=>{\n        localStorage.removeItem('editDataId')\n        localStorage.removeItem('myFormValues')\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n    }\n  }, []);\n\n\n    // Contact\n\n\n    return (\n        <div>\n            {( postContactLoading ||editContactLoading ||putContactLoading) ?\n                <AppLoader/> :\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{\n                        span: 24\n                    }}\n                    wrapperCol={{\n                        span: 24\n                    }}\n                    style={{\n                        maxWidth: \"100%\"\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Номер телефона\"\n                                name=\"tel\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ввод номера телефона обязателен\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Facebook\"\n                                name=\"facebook\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ссылка на Facebook обязательна\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Telegram\"\n                                name=\"twitter\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Обязательно ввести ссылку на Telegram\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label=\"Instagram\"\n                                name=\"instagram\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Ссылка на Инстаграм обязательна\"\n                                    }\n                                ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                        </Col>\n                    </Row>\n\n\n\n\n\n                        <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\",marginTop:\"20px\"}}>\n                    {\n                            editContactSuccess ? 'Edit' : 'Add'\n                        }\n                    </Button>\n                </Form>\n            }\n        </div>\n    );\n};\n\nexport default ContactPostEdit;","import { Col } from '../grid';\nexport default Col;"],"names":["axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","initialValueForm","tel","facebook","twitter","instagram","ContactPostEdit","form","Form","useForm","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","mutate","postContactMutate","postContact","isLoading","postContactLoading","isSuccess","postContactSuccess","postContactError","isError","postContactIsError","useMutation","_ref","apiService","onSuccess","message","success","onError","editContactLoading","editContactData","refetch","editContactRefetch","editContactSuccess","putContactError","putContactIsError","useQuery","enabled","putContact","putContactLoading","putData","putContactSuccess","_ref2","useEffect","type","EDIT_DATA","payload","setFieldsValue","edit","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","_jsx","children","AppLoader","_jsxs","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","onFinishFailed","errorInfo","autoComplete","Row","gutter","Col","Item","label","rules","required","Input","Button","htmlType","width","marginTop"],"sourceRoot":""}