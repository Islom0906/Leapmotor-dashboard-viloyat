{"version":3,"file":"static/js/76.d8684ac6.chunk.js","mappings":"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","sources":["@crema/services/apis/axios.js","@crema/utility/helper/persistence-storage.js","@crema/services/apis/api.js","pages/sample/About/PostEditAbout.jsx"],"sourcesContent":["import {getItem} from '../../utility/helper/persistence-storage';\nimport axios from 'axios';\n\naxios.defaults.baseURL = `${process.env.REACT_APP_API_URL}`;\n\naxios.interceptors.request.use((config) => {\n    const jwt = getItem('lptoken');\n    const authorization = jwt!==null ? `Bearer ${jwt}` : '';\n    config.headers.authorization = authorization;\n    return config;\n});\n\nexport default axios;","export const getItem=(key)=>{\n    try {\n        return localStorage.getItem(key)\n    } catch (error) {\n        console.log('Error getting data')\n    }\n}\n\nexport const setItem=(key,data)=>{\n    try {\n        localStorage.setItem(key,data)\n    } catch (error) {\n        console.log('Error saving data')\n    }\n}\nexport const removeItem=(key)=>{\n    try {\n        return localStorage.removeItem(key)\n    } catch (error) {\n        console.log('Error removing data')\n    }\n}","import axios from './axios';\n\nconst apiService = {\n    // malutmotlarni get qilish uchun url beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getData(url) {\n        const {data} = await axios.get(url);\n        return data;\n    },\n    // faqat bitta malumot  get qilish uchun url va idsi beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async getDataByID(url, id) {\n        const {data} = await axios.get(`${url}/${id}`);\n        return data;\n    },\n    // malutmotni post qilish uchun url va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async postData(url, formData) {\n        const {data}= await axios.post(url, formData);\n        return data\n    },\n    // malutmotni edit qilish uchun url,id va yaratilgan malumot beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async editData(url, formData, id) {\n        const {data}= await axios.put(`${url}/${id}`, formData)\n        return data\n    },\n    // malutmotni delete qilish uchun url va id  beriladi\n    // url / boshlansin yani /edu shunga oxshagan\n    async deleteData(url, id) {\n        await axios.delete(`${url}/${id}`);\n    },\n\n    async deleteImages(url, ids) {\n        console.log('delete image',ids)\n        await axios.delete(url, {data:ids});\n    },\n};\nexport default apiService;","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Input, message, Row,  Upload,Typography} from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport {useMutation, useQuery} from 'react-query';\nimport apiService from '../../../@crema/services/apis/api';\nimport {AppLoader} from '../../../@crema';\nimport {useNavigate} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {EDIT_DATA} from '../../../shared/constants/ActionTypes';\nimport {MinusCircleOutlined} from \"@ant-design/icons\";\nconst { TextArea } = Input;\nconst { Title } = Typography;\nconst initialValueForm = {\n    mainTextRu: \"\",\n    mainTextUz: \"\",\n    mainMediaId: \"\",\n    videoId: \"\",\n    aboutDescriptionRu: \"\",\n    aboutDescriptionUz:\"\",\n    team:[\n        {\n            mediaId:\"\",\n            nameRu:\"\",\n            nameUz:\"\",\n            levelRu:\"\",\n            levelUz:\"\"\n        }\n    ],\n    researchTitleRu:\"\",\n    researchTitleUz:\"\",\n    researchTextRu:\"\",\n    researchTextUz:\"\",\n    researchMediaId:\"\",\n    aboutSysDescriptionRu: \"\",\n    aboutsysDescriptionUz:\"\",\n    systems:[\n        {\n            mediaId:\"\",\n            titleRu:\"\",\n            titleUz:\"\",\n            descriptionRu:\"\",\n            descriptionUz:\"\"\n        }\n    ],\n};\n\n\nconst PostEditAbout = () => {\n    const [form] = Form.useForm();\n    const navigate = useNavigate();\n    const {editId} = useSelector((state) => state.editData);\n    const dispatch = useDispatch();\n\n    const [fileListPropsMain, setFileListPropsMain] = useState([]);\n    const [fileListVideo, setFileListVideo] = useState([]);\n    const [fileListPropsVideo, setFileListPropsVideo] = useState([]);\n    const [fileListPropsTeam, setFileListPropsTeam] = useState([]);\n    const [fileListPropsResearch, setFileListPropsResearch] = useState([]);\n    const [fileListPropsSystem, setFileListPropsSystem] = useState([]);\n    const [mainIndexTeam, setMainIndexTeam] = useState(0);\n    const [mainIndexResearch, setMainIndexResearch] = useState(0);\n    const [isUpload, setIsUpload] = useState('');\n\n\n    // query-banner\n    const {\n        mutate: postBannerMutate,\n        data: postBanner,\n        isLoading: postBannerLoading,\n        isSuccess: postBannerSuccess,\n\n    } = useMutation(({url, data}) => apiService.postData(url, data),\n        {\n            onSuccess: () => message.success('Success'),\n            onError: (error) => message.error(error.message)\n        });\n    // query-image\n    const {\n        mutate: imagesUploadMutate,\n        data: imagesUpload,\n        isLoading: imagesUploadLoading,\n        isSuccess: imagesUploadSuccess,\n    } = useMutation(({url, formData}) => apiService.postData(url, formData), {\n\n        onError: (error) => message.error(error.response.message)\n    });\n    // query-edit\n\n    const {\n        isLoading: editBannerLoading,\n        data: editProductData,\n        refetch: editBannerRefetch,\n        isSuccess: editProductSuccess,\n    } = useQuery(\n        ['edit-banner', editId],\n        () => apiService.getDataByID('/about', editId),\n        {\n            enabled: false,\n        },\n    );\n    // put-query\n    const {\n        mutate: putBanner,\n        isLoading: putBannerLoading,\n        data: putData,\n        isSuccess: putBannerSuccess,\n\n    } = useMutation(({url, data, id}) => apiService.editData(url, data, id), {\n        onError: (error) => {\n            message.error(error.response.data)\n        }\n    });\n    // delete-image-query\n    const {mutate: imagesDeleteMutate} = useMutation(({url, ids}) => apiService.deleteImages(url, ids), {\n            onSuccess: () => message.success('Success'),\n            onError: (error) => message.error(error.message)\n        }\n    );\n    // product success\n    useEffect(() => {\n        if (putBannerSuccess) {\n            dispatch({type: EDIT_DATA, payload: ''});\n        }\n\n        if (postBannerSuccess || putBannerSuccess) {\n\n            navigate('/about');\n        }\n    }, [postBanner, putData]);\n    // product error\n    // useEffect(() => {\n    //     if (postBannerIsError) {\n    //         message.error(postBannerError.message);\n    //     }\n    //     if (putBannerIsError) {\n    //         message.error(putBannerError.message);\n    //     }\n    // }, [postBannerError, putBannerError]);\n\n    // if edit product\n    useEffect(() => {\n        if (editId !== '') {\n            editBannerRefetch();\n        }\n    }, [editId]);\n\n    // if no edit product\n    useEffect(() => {\n        if (editId === '') {\n            form.setFieldsValue(initialValueForm);\n        }\n    }, []);\n\n    //edit product\n    useEffect(() => {\n        const data=editProductData\n        const initialTeam = [];\n        const initialFileListPropsTeam = [];\n        const initialSystem = [];\n        const initialFileListPropsSystem = [];\n\n        if(data!==undefined){\n\n            for (let i = 0; i < data.aboutCompany.team.length; i++) {\n                const editDefaultImages = [{\n                    uid: data.aboutCompany.team[i]?.image?._id,\n                    name: data.aboutCompany.team[i]?.image?.name,\n                    status: \"done\",\n                    url: `${process.env.REACT_APP_API_URL}/${data?.aboutCompany.team[i]?.image?.path}`\n                }];\n                const item = {\n                    nameRu: data?.aboutCompany.team[i].nameRu,\n                    nameUz: data?.aboutCompany.team[i].nameUz,\n                    levelRu: data?.aboutCompany.team[i].levelRu,\n                    levelUz: data?.aboutCompany.team[i].levelUz,\n                    mediaId:data?.aboutCompany.team[i].image\n                };\n                initialTeam.push(item);\n                // initialFileListTeam.push(data.aboutCompany.team[i]?.image)\n                initialFileListPropsTeam.push(editDefaultImages)\n            }\n\n            for (let i = 0; i < data.aboutSystems.systems.length; i++) {\n                const editDefaultImages = [{\n                    uid: data?.aboutSystems.systems[i]?.image?._id,\n                    name: data?.aboutSystems.systems[i]?.image?.name,\n                    status: \"done\",\n                    url: `${process.env.REACT_APP_API_URL}/${data?.aboutSystems.systems[i]?.image?.path}`\n                }];\n                const item = {\n                    titleRu: data?.aboutSystems.systems[i].titleRu,\n                    titleUz: data?.aboutSystems.systems[i].titleUz,\n                    descriptionRu: data?.aboutSystems.systems[i].descriptionRu,\n                    descriptionUz: data?.aboutSystems.systems[i].descriptionUz,\n                    mediaId:data?.aboutSystems.systems[i].image\n                };\n                initialSystem.push(item);\n                // initialFileListSystem.push(data?.aboutSystems?.systems[i]?.image)\n                initialFileListPropsSystem.push(editDefaultImages)\n            }\n        }\n\n        const mainSectionImage = [{\n            uid: data?.mainSection?.imageMain?._id,\n            name: data?.mainSection?.imageMain?.name,\n            status: \"done\",\n            url: `${process.env.REACT_APP_API_URL}/${data?.mainSection?.imageMain?.path}`\n        }]\n\n        const researchImage = [{\n            uid: data?.research.image?._id,\n            name: data?.research.image?.name,\n            status: \"done\",\n            url: `${process.env.REACT_APP_API_URL}/${data?.research?.image?.path}`\n        }]\n\n        const video = [{\n            uid: data?.video?._id,\n            name: data?.video?.name,\n            status: \"done\",\n            url: `${process.env.REACT_APP_API_URL}/${data?.video?.path}`\n        }]\n\n        if (editProductSuccess) {\n\n            const edit = {\n                mainTextRu: data?.mainSection?.textRu,\n                mainTextUz: data?.mainSection?.textRu,\n                mainMediaId: mainSectionImage,\n                videoId: video,\n                aboutDescriptionRu: data?.aboutCompany.descriptionRu,\n                aboutDescriptionUz:data?.aboutCompany.descriptionUz,\n                team:initialTeam,\n                researchTitleRu:data?.research.titleRu,\n                researchTitleUz:data?.research.titleUz,\n                researchTextRu:data?.research.textRu,\n                researchTextUz:data?.research.textUz,\n                researchMediaId:researchImage,\n                aboutSysDescriptionRu: data?.aboutSystems.descriptionRu,\n                aboutsysDescriptionUz:data?.aboutSystems.descriptionUz,\n                systems:initialSystem,\n            };\n            setFileListPropsMain(mainSectionImage)\n            setFileListVideo([data?.video])\n            setFileListPropsVideo(video)\n            setFileListPropsTeam(initialFileListPropsTeam)\n            setFileListPropsResearch(researchImage)\n            setFileListPropsSystem(initialFileListPropsSystem)\n            form.setFieldsValue(edit);\n\n\n        }\n\n    }, [editProductData]);\n\n    // post product\n    const onFinish = (values) => {\n\n        const team = [];\n        const systems = [];\n\n        for (let i = 0; i < fileListPropsTeam.length; i++) {\n            const item = {\n                \"nameRu\": values.team[i].nameRu,\n                \"nameUz\": values.team[i].nameUz,\n                \"levelRu\": values.team[i].levelRu,\n                \"levelUz\": values.team[i].levelUz,\n                \"mediaId\": fileListPropsTeam[i][0]?.uid\n            };\n            team.push(item);\n        }\n\n        for (let i = 0; i < fileListPropsSystem.length; i++) {\n            const item = {\n                \"titleRu\": values.systems[i].titleRu,\n                \"titleUz\": values.systems[i].titleUz,\n                \"descriptionRu\": values.systems[i].descriptionRu,\n                \"descriptionUz\": values.systems[i].descriptionUz,\n                \"mediaId\": fileListPropsSystem[i][0]?.uid\n            };\n            systems.push(item);\n        }\n\n        const data = {\n            mainSection:{\n                textRu:values.mainTextRu,\n                textUz:values.mainTextUz,\n                mediaId:fileListPropsMain[0]?.uid\n            },\n            videoId:fileListVideo[0]?._id,\n            aboutCompany:{\n                descriptionRu:values.aboutDescriptionRu,\n                descriptionUz:values.aboutDescriptionUz,\n                team,\n            },\n            research:{\n                titleRu:values.researchTitleRu,\n                titleUz:values.researchTitleUz,\n                textRu:values.researchTextRu,\n                textUz:values.researchTextUz,\n                mediaId:fileListPropsResearch[0]?.uid\n            },\n            aboutSystems:{\n                descriptionRu:values.aboutSysDescriptionRu,\n                descriptionUz:values.aboutsysDescriptionUz,\n                systems\n            }\n        };\n\n        if (editProductSuccess) {\n            putBanner({url: \"/about\", data, id: editId});\n        } else {\n            postBannerMutate({url: \"/about\", data});\n        }\n\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n\n    // image and video upload\n    useEffect(() => {\n        // MAIN\n        if (imagesUploadSuccess &&  isUpload===\"main\"){\n            const uploadImg= [{\n                uid: imagesUpload[0]?._id,\n                name: imagesUpload[0]?.name,\n                status: \"done\",\n                url: `${process.env.REACT_APP_API_URL}/${imagesUpload[0]?.path}`\n            }]\n\n            setFileListPropsMain(uploadImg);\n            setIsUpload('false')\n        }\n        // VIDEO\n        if (imagesUploadSuccess && fileListPropsVideo[0]?.originFileObj?.uid && isUpload==='video'){\n            setFileListVideo(imagesUpload);\n            setIsUpload('')\n        }\n        // RESEARCH\n        if (imagesUploadSuccess && isUpload==='research'){\n            const uploadImg= [{\n                uid: imagesUpload[0]?._id,\n                name: imagesUpload[0]?.name,\n                status: \"done\",\n                url: `${process.env.REACT_APP_API_URL}/${imagesUpload[0]?.path}`\n            }]\n            setFileListPropsResearch(uploadImg);\n            setIsUpload('')\n        }\n        // TEAM\n        const uploadFilesStateTeam = [...fileListPropsTeam];\n        if (imagesUploadSuccess && isUpload==='team') {\n            const uploadImg= [{\n                uid: imagesUpload[0]?._id,\n                name: imagesUpload[0]?.name,\n                status: \"done\",\n                url: `${process.env.REACT_APP_API_URL}/${imagesUpload[0]?.path}`\n            }]\n            uploadFilesStateTeam[mainIndexTeam] = uploadImg;\n            setFileListPropsTeam(uploadFilesStateTeam);\n            const getValue = form.getFieldsValue();\n            const itemsValue = getValue?.team;\n            itemsValue[mainIndexTeam].mediaId = uploadImg;\n            form.setFieldsValue({ items: itemsValue });\n            setIsUpload('')\n        }\n        // SYSTEM\n        const uploadFilesStateSystem = [...fileListPropsSystem];\n        if (imagesUploadSuccess &&  isUpload==='system') {\n            const uploadImg= [{\n                uid: imagesUpload[0]?._id,\n                name: imagesUpload[0]?.name,\n                status: \"done\",\n                url: `${process.env.REACT_APP_API_URL}/${imagesUpload[0]?.path}`\n            }]\n            uploadFilesStateSystem[mainIndexResearch] = uploadImg;\n            setFileListPropsSystem(uploadFilesStateSystem);\n            const getValue = form.getFieldsValue();\n            const itemsValue = getValue.systems;\n            itemsValue[mainIndexResearch].mediaId = uploadImg;\n            form.setFieldsValue({ items: itemsValue });\n            setIsUpload('')\n\n        }\n    }, [imagesUpload]);\n    const onChangeMain = ({ fileList: newFileList }) => {\n        form.setFieldsValue({ mainMediaId: newFileList });\n        if (fileListPropsMain.length!==0 || newFileList.length === 0) {\n            const id = [fileListPropsMain[0]?.uid];\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({ url: \"/medias\", ids });\n            setFileListPropsMain([])\n        }\n        const formData = new FormData();\n\n        if (newFileList.length !== 0) {\n            formData.append(\"media\", newFileList[0].originFileObj);\n            imagesUploadMutate({ url: \"/medias\", formData });\n            setIsUpload('main')\n        }\n\n    };\n    const onChangeVideo = ({ fileList: newFileList }) => {\n        setFileListPropsVideo(newFileList);\n        form.setFieldsValue({ videoId: newFileList });\n        if (fileListVideo.length!==0 || newFileList.length === 0) {\n            const id = [fileListVideo[0]?._id];\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({ url: \"/medias\", ids });\n            setFileListVideo([])\n\n        }\n        const formData = new FormData();\n        if (newFileList.length !== 0) {\n            formData.append(\"media\", newFileList[0].originFileObj);\n            imagesUploadMutate({ url: \"/medias\", formData });\n            setIsUpload('video')\n        }\n    };\n    const onChangeResearch = ({ fileList: newFileList }) => {\n\n        // setFileListPropsResearch(newFileList);\n        form.setFieldsValue({ researchMediaId: newFileList });\n        if (fileListPropsResearch.length!==0 || newFileList.length === 0) {\n            const id = [fileListPropsResearch[0]?.uid];\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({ url: \"/medias\", ids });\n            setFileListPropsResearch([])\n\n        }\n        const formData = new FormData();\n        if (newFileList.length !== 0) {\n            formData.append(\"media\", newFileList[0].originFileObj);\n            imagesUploadMutate({ url: \"/medias\", formData });\n            setIsUpload('research')\n        }\n    };\n\n    const onChangeAboutImage = (index, { fileList: newFileList }) => {\n        setMainIndexTeam(index);\n\n        if (fileListPropsTeam[index] || newFileList.length === 0) {\n            const id = [fileListPropsTeam[index][0].uid];\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({ url: \"/medias\", ids });\n            fileListPropsTeam[index] = null;\n            setFileListPropsTeam(fileListPropsTeam);\n\n        }\n        const formData = new FormData();\n        if (newFileList.length !== 0) {\n            formData.append(\"media\", newFileList[0].originFileObj);\n            imagesUploadMutate({ url: \"/medias\", formData });\n            setIsUpload('team')\n\n        }\n    };\n\n    const onChangeSystemsImage = (index, { fileList: newFileList }) => {\n        setMainIndexResearch(index);\n\n        if (fileListPropsSystem[index] || newFileList.length === 0) {\n            const id = [fileListPropsSystem[index][0].uid];\n            const ids={\n                ids:id\n            }\n            imagesDeleteMutate({ url: \"/medias\", ids });\n            fileListPropsSystem[index] = null;\n            setFileListPropsSystem(fileListPropsSystem);\n\n        }\n        const formData = new FormData();\n        if (newFileList.length !== 0) {\n            formData.append(\"media\", newFileList[0].originFileObj);\n            imagesUploadMutate({ url: \"/medias\", formData });\n            setIsUpload('system')\n        }\n    };\n\n\n\n    const handleRemoveTeam = (name, remove, index,  editorFileList) => {\n        if (editorFileList === fileListPropsTeam[index] && fileListPropsTeam.length>0) {\n\n            const id = [fileListPropsTeam[index][0].uid];\n            const ids={\n                ids:id\n            }\n            fileListPropsTeam.splice(index, 1);\n            // fileListTeam.splice(index, 1);\n            imagesDeleteMutate({url: \"/medias\", ids});\n        }\n        remove(name);\n    };\n\n    const handleRemoveSystems = (name, remove, index, editorFileList) => {\n\n        if (editorFileList === fileListPropsSystem[index]) {\n            const id = [fileListPropsSystem[index][0].uid];\n            fileListPropsSystem.splice(index, 1);\n            const ids={\n                ids:id\n            }\n            // fileListSystem.splice(index, 1);\n            imagesDeleteMutate({url: \"/medias\", ids});\n        }\n        remove(name);\n    };\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = [];\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n            localStorage.setItem(\n                'myFormValues',\n                JSON.stringify(form.getFieldsValue()),\n            );\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId');\n            localStorage.removeItem('myFormValues');\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        };\n    }, []);\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n    return (\n        <div>\n            {imagesUploadLoading ||\n            postBannerLoading ||\n            editBannerLoading ||\n            putBannerLoading ? (\n                <AppLoader/>\n            ) : (\n                <Form\n                    form={form}\n                    name='basic'\n                    labelCol={{\n                        span: 24,\n                    }}\n                    wrapperCol={{\n                        span: 24,\n                    }}\n                    style={{\n                        maxWidth: '100%',\n                    }}\n                    initialValues={initialValueForm}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete='off'>\n                    {/*Main*/}\n                    <Title level={2}>Главный баннер</Title>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Текст Ru'\n                                name='mainTextRu'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Требуется текст RU!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}   />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Text Uz'\n                                name='mainTextUz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Text kiritish talab qilinadi Uz!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}   />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение'\n                                name={'mainMediaId'}\n                                rules={[{required: true, message: 'Требуется загрузка изображения '}]}>\n                                <ImgCrop rotate>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListPropsMain}\n                                        listType='picture-card'\n                                        onChange={onChangeMain}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}\n                                    >\n                                        {fileListPropsMain.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n\n                    </Row>\n                    {/*video*/}\n                    <Title level={2}>Видео</Title>\n                    <Row gutter={20}>\n                        <Col span={24}>\n                            <Form.Item\n                                label='Баннерное видео'\n                                name={'videoId'}\n                                rules={[{required: true, message: 'Требуется видеобаннер'}]}>\n\n                                <Upload\n                                    maxCount={1}\n                                    accept=\"video/*\"\n                                    fileList={fileListPropsVideo}\n                                    listType='picture-card'\n                                    onChange={onChangeVideo}\n                                    onPreview={onPreview}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListPropsVideo.length>0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    {/*about team*/}\n                    <Title level={2}>О команде</Title>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Текст Ru'\n                                name='aboutDescriptionRu'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Требуется текст RU!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}   />\n\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Text Uz'\n                                name='aboutDescriptionUz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Text kiritish talab qilinadi Uz!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}   />\n\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Form.List name=\"team\">\n                        {(fields, {add, remove}) => (\n                            <>\n                                {fields.map((field, index) => {\n                                    const editorFileList = fileListPropsTeam[index] || [];\n                                    return (\n                                        <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                            <Row gutter={20}>\n                                                <Col span={12}>\n                                                    <Form.Item\n                                                        label='Имя'\n                                                        name={[field.name, 'nameRu']}\n                                                        rules={[\n                                                            {\n                                                                required: true,\n                                                                message: 'Требуется имя ',\n                                                            },\n                                                        ]}>\n                                                        <Input/>\n                                                    </Form.Item>\n                                                </Col>\n                                                <Col span={12}>\n                                                    <Form.Item\n                                                        label='Ism'\n                                                        name={[field.name, 'nameUz']}\n                                                        rules={[\n                                                            {\n                                                                required: true,\n                                                                message: 'Ism kiritish talab qilinadi ',\n                                                            },\n                                                        ]}>\n                                                        <Input/>\n                                                    </Form.Item>\n                                                </Col>\n                                            </Row>\n                                            <Row gutter={20}>\n                                                <Col span={12}>\n                                                    <Form.Item\n                                                        label='Уровень'\n                                                        name={[field.name,'levelRu']}\n                                                        rules={[\n                                                            {\n                                                                required: true,\n                                                                message: 'Требуется уровень ',\n                                                            },\n                                                        ]}>\n                                                        <Input/>\n                                                    </Form.Item>\n                                                </Col>\n                                                <Col span={12}>\n                                                    <Form.Item\n                                                        label='Daraja'\n                                                        name={[field.name,'levelUz']}\n                                                        rules={[\n                                                            {\n                                                                required: true,\n                                                                message: 'Daraja kiritish talab qilinadi ',\n                                                            },\n                                                        ]}>\n                                                        <Input/>\n                                                    </Form.Item>\n                                                </Col>\n                                            </Row>\n\n\n                                            <Form.Item\n                                                label={`(Фото персонала) ${index + 1}`}\n                                                name={[field.name, \"mediaId\"]}\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message: \"Требуется фото сотрудника\"\n                                                    }\n                                                ]}\n                                            >\n                                                <ImgCrop rotate>\n                                                    <Upload\n                                                        maxCount={1}\n                                                        listType=\"picture-card\"\n                                                        fileList={editorFileList}\n                                                        onChange={(newFileList) => onChangeAboutImage(index, newFileList)}\n                                                        onPreview={onPreview}\n                                                        beforeUpload={() => false}\n                                                    >\n                                                        {editorFileList.length < 1 && \"+ Upload\"}\n                                                    </Upload>\n                                                </ImgCrop>\n                                            </Form.Item>\n\n                                            <MinusCircleOutlined\n                                                onClick={() => handleRemoveTeam(field.name, remove, index, editorFileList)}/>\n                                        </div>\n\n                                    );\n                                })}\n                                <Form.Item>\n                                    <Button type=\"primary\" onClick={() => add()} block style={{backgroundColor:'#28a745'}}>\n                                        Добавьте предмет\n                                    </Button>\n                                </Form.Item>\n\n                            </>\n                        )}\n                    </Form.List>\n                    {/*research*/}\n                    <Title level={2}>Исследовать</Title>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Заголовок'\n                                name='researchTitleRu'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Требуется заголовок ',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Sarlavha'\n                                name='researchTitleUz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Sarlavha kiritish talab qilinadi ',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Текст'\n                                name='researchTextRu'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Требуется текст ',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Matn'\n                                name='researchTextUz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Matn kiritish talab qilinadi ',\n                                    },\n                                ]}>\n                                <Input/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Изображение'\n                                name={'researchMediaId'}\n                                rules={[{required: true, message: 'Требуется загрузка изображения '}]}>\n                                <ImgCrop rotate>\n                                    <Upload\n                                        maxCount={1}\n                                        fileList={fileListPropsResearch}\n                                        listType='picture-card'\n                                        onChange={onChangeResearch}\n                                        onPreview={onPreview}\n                                        beforeUpload={() => false}>\n                                        {fileListPropsResearch.length > 0 ? \"\" : \"Upload\"}\n                                    </Upload>\n                                </ImgCrop>\n                            </Form.Item>\n                        </Col>\n\n                    </Row>\n                    {/*about system*/}\n                    <Title level={2}>О системе</Title>\n\n                    <Row gutter={20}>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Текст Ru'\n                                name='aboutSysDescriptionRu'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Требуется текст RU!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}   />\n                            </Form.Item>\n                        </Col>\n                        <Col span={12}>\n                            <Form.Item\n                                label='Text Uz'\n                                name='aboutsysDescriptionUz'\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Text kiritish talab qilinadi Uz!',\n                                    },\n                                ]}>\n                                <TextArea rows={4}   />\n\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Form.List name=\"systems\">\n                        {(fields, {add, remove}) => (\n                            <>\n                                {fields.map((field, index) => {\n                                    const editorFileList = fileListPropsSystem[index] || [];\n                                    return (\n                                        <div key={field.fieldKey} style={{marginBottom: 20}}>\n                                            <Row gutter={20}>\n                                                <Col span={12}>\n                                                    <Form.Item\n                                                        label='Заголовок'\n                                                        name={[field.name,'titleRu']}\n                                                        rules={[\n                                                            {\n                                                                required: true,\n                                                                message: 'Требуется заголовок ',\n                                                            },\n                                                        ]}>\n                                                        <Input/>\n                                                    </Form.Item>\n                                                </Col>\n                                                <Col span={12}>\n                                                    <Form.Item\n                                                        label='Sarlavha'\n                                                        name={[field.name,'titleUz']}\n                                                        rules={[\n                                                            {\n                                                                required: true,\n                                                                message: 'Sarlavha kiritish talab qilinadi ',\n                                                            },\n                                                        ]}>\n                                                        <Input/>\n                                                    </Form.Item>\n                                                </Col>\n                                            </Row>\n                                            <Row gutter={20}>\n                                                <Col span={12}>\n                                                    <Form.Item\n                                                        label='Текст'\n                                                        name={[field.name,'descriptionRu']}\n                                                        rules={[\n                                                            {\n                                                                required: true,\n                                                                message: 'Требуется текст',\n                                                            },\n                                                        ]}>\n                                                        <TextArea rows={4}   />\n\n                                                    </Form.Item>\n                                                </Col>\n                                                <Col span={12}>\n                                                    <Form.Item\n                                                        label='Matn'\n                                                        name={[field.name,'descriptionUz']}\n                                                        rules={[\n                                                            {\n                                                                required: true,\n                                                                message: 'Matn kiritish talab qilinadi ',\n                                                            },\n                                                        ]}>\n                                                        <TextArea rows={4}   />\n\n                                                    </Form.Item>\n                                                </Col>\n                                            </Row>\n\n\n                                            <Form.Item\n                                                label={`(Фото) ${index + 1}`}\n                                                name={[field.name, \"mediaId\"]}\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message: \"Требуется фото\"\n                                                    }\n                                                ]}\n                                            >\n                                                <ImgCrop rotate>\n                                                    <Upload\n                                                        maxCount={1}\n                                                        listType=\"picture-card\"\n                                                        fileList={editorFileList}\n                                                        onChange={(newFileList) => onChangeSystemsImage(index, newFileList)}\n                                                        onPreview={onPreview}\n                                                        beforeUpload={() => false}\n                                                    >\n                                                        {editorFileList.length < 1 && \"+ Upload\"}\n                                                    </Upload>\n                                                </ImgCrop>\n                                            </Form.Item>\n\n                                            <MinusCircleOutlined\n                                                onClick={() => handleRemoveSystems(field.name, remove, index, editorFileList)}/>\n                                        </div>\n\n                                    );\n                                })}\n                                <Form.Item>\n                                    <Button  type='primary' onClick={() => add()} block style={{backgroundColor:'#28a745'}}>\n                                        Добавьте предмет\n                                    </Button>\n                                </Form.Item>\n\n                            </>\n                        )}\n                    </Form.List>\n                    <Button type='primary' htmlType='submit' style={{width: '100%'}}>\n                        {editProductSuccess ? 'Edit' : 'Add'}\n                    </Button>\n                </Form>\n            )}\n        </div>\n    );\n};\n\nexport default PostEditAbout;"],"names":["axios","baseURL","concat","process","request","use","config","jwt","key","localStorage","getItem","error","console","log","authorization","headers","getData","url","data","get","getDataByID","id","postData","formData","post","editData","put","deleteData","delete","deleteImages","ids","TextArea","Input","Title","Typography","initialValueForm","mainTextRu","mainTextUz","mainMediaId","videoId","aboutDescriptionRu","aboutDescriptionUz","team","mediaId","nameRu","nameUz","levelRu","levelUz","researchTitleRu","researchTitleUz","researchTextRu","researchTextUz","researchMediaId","aboutSysDescriptionRu","aboutsysDescriptionUz","systems","titleRu","titleUz","descriptionRu","descriptionUz","PostEditAbout","form","Form","useForm","navigate","useNavigate","editId","useSelector","state","dispatch","useDispatch","fileListPropsMain","setFileListPropsMain","useState","fileListVideo","setFileListVideo","fileListPropsVideo","setFileListPropsVideo","fileListPropsTeam","setFileListPropsTeam","fileListPropsResearch","setFileListPropsResearch","fileListPropsSystem","setFileListPropsSystem","mainIndexTeam","setMainIndexTeam","mainIndexResearch","setMainIndexResearch","isUpload","setIsUpload","mutate","postBannerMutate","postBanner","isLoading","postBannerLoading","isSuccess","postBannerSuccess","useMutation","_ref","apiService","onSuccess","message","success","onError","imagesUploadMutate","imagesUpload","imagesUploadLoading","imagesUploadSuccess","_ref2","response","editBannerLoading","editProductData","refetch","editBannerRefetch","editProductSuccess","useQuery","enabled","putBanner","putBannerLoading","putData","putBannerSuccess","_ref3","imagesDeleteMutate","_ref4","useEffect","type","EDIT_DATA","payload","setFieldsValue","_data$mainSection","_data$mainSection$ima","_data$mainSection2","_data$mainSection2$im","_data$mainSection3","_data$mainSection3$im","_data$research$image","_data$research$image2","_data$research","_data$research$image3","_data$video","_data$video2","_data$video3","initialTeam","initialFileListPropsTeam","initialSystem","initialFileListPropsSystem","undefined","i","aboutCompany","length","_data$aboutCompany$te","_data$aboutCompany$te2","_data$aboutCompany$te3","_data$aboutCompany$te4","_data$aboutCompany$te5","_data$aboutCompany$te6","editDefaultImages","uid","image","_id","name","status","path","item","push","aboutSystems","_data$aboutSystems$sy","_data$aboutSystems$sy2","_data$aboutSystems$sy3","_data$aboutSystems$sy4","_data$aboutSystems$sy5","_data$aboutSystems$sy6","mainSectionImage","mainSection","imageMain","researchImage","research","video","_data$mainSection4","_data$mainSection5","edit","textRu","textUz","_fileListPropsVideo$","_fileListPropsVideo$$","_imagesUpload$","_imagesUpload$2","_imagesUpload$3","uploadImg","originFileObj","_imagesUpload$4","_imagesUpload$5","_imagesUpload$6","uploadFilesStateTeam","_imagesUpload$7","_imagesUpload$8","_imagesUpload$9","getValue","getFieldsValue","itemsValue","items","uploadFilesStateSystem","_imagesUpload$10","_imagesUpload$11","_imagesUpload$12","storedValues","JSON","parse","images","handleBeforeUnload","setItem","stringify","window","addEventListener","removeItem","removeEventListener","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","Image","imgWindow","open","document","write","outerHTML","_jsx","children","AppLoader","_jsxs","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","_fileListPropsMain$","_fileListVideo$","_fileListPropsResearc","_fileListPropsTeam$i$","_fileListPropsSystem$","onFinishFailed","errorInfo","autoComplete","level","Row","gutter","Col","Item","label","rules","required","rows","ImgCrop","rotate","Upload","maxCount","fileList","listType","onChange","_ref5","newFileList","_fileListPropsMain$2","FormData","append","beforeUpload","accept","_ref6","_fileListVideo$2","List","fields","_ref10","add","remove","_Fragment","map","field","index","editorFileList","marginBottom","onChangeAboutImage","_ref8","MinusCircleOutlined","onClick","handleRemoveTeam","splice","fieldKey","Button","block","backgroundColor","_ref7","_fileListPropsResearc2","_ref11","onChangeSystemsImage","_ref9","handleRemoveSystems","htmlType","width"],"sourceRoot":""}